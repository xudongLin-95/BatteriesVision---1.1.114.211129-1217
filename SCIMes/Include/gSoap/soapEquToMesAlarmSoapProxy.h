/* soapEquToMesAlarmSoapProxy.h
   Generated by gSOAP 2.8.108 for mes_cc2_1.h

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapEquToMesAlarmSoapProxy_H
#define soapEquToMesAlarmSoapProxy_H
#include "soapH.h"

    class SOAP_CMAC EquToMesAlarmSoapProxy : public soap {
      public:
        /// Endpoint URL of service 'EquToMesAlarmSoapProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in mes_cc2_1.h, if any
        /// Construct a proxy with new managing context
        EquToMesAlarmSoapProxy();
        /// Copy constructor
        EquToMesAlarmSoapProxy(const EquToMesAlarmSoapProxy& rhs);
        /// Construct proxy given a managing context
        EquToMesAlarmSoapProxy(const struct soap&);
        /// Construct proxy given a managing context and endpoint URL
        EquToMesAlarmSoapProxy(const struct soap&, const char *soap_endpoint_url);
        /// Constructor taking an endpoint URL
        EquToMesAlarmSoapProxy(const char *soap_endpoint_url);
        /// Constructor taking input and output mode flags for the new managing context
        EquToMesAlarmSoapProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        EquToMesAlarmSoapProxy(const char *soap_endpoint_url, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        EquToMesAlarmSoapProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and its managing context
        virtual ~EquToMesAlarmSoapProxy();
        /// Initializer used by constructors
        virtual void EquToMesAlarmSoapProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual EquToMesAlarmSoapProxy *copy();
        /// Copy assignment
        EquToMesAlarmSoapProxy& operator=(const EquToMesAlarmSoapProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Add SOAP Header to message
        virtual void soap_header(ns1__LoginSoapHeader *ns1__LoginSoapHeader_);
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault subcode QName string (NULL when absent)
        virtual const char *soap_fault_subcode();
        /// Get SOAP Fault string/reason (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail XML string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        //
        /// Web service synchronous operation 'Alarm' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Alarm(_ns1__Alarm *ns1__Alarm_, _ns1__AlarmResponse &ns1__AlarmResponse) { return this->Alarm(NULL, NULL, ns1__Alarm_, ns1__AlarmResponse); }
        /// Web service synchronous operation 'Alarm' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Alarm(const char *soap_endpoint_url, const char *soap_action, _ns1__Alarm *ns1__Alarm_, _ns1__AlarmResponse &ns1__AlarmResponse) { return this->send_Alarm(soap_endpoint_url, soap_action, ns1__Alarm_) || this->recv_Alarm(ns1__AlarmResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Alarm' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Alarm(const char *soap_endpoint_url, const char *soap_action, _ns1__Alarm *ns1__Alarm_);
        /// Web service asynchronous operation 'recv_Alarm' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Alarm(_ns1__AlarmResponse &ns1__AlarmResponse);
        //
        /// Web service synchronous operation 'Alarm' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Alarm_(_ns1__Alarm *ns1__Alarm_, _ns1__AlarmResponse &ns1__AlarmResponse) { return this->Alarm_(NULL, NULL, ns1__Alarm_, ns1__AlarmResponse); }
        /// Web service synchronous operation 'Alarm' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Alarm_(const char *soap_endpoint_url, const char *soap_action, _ns1__Alarm *ns1__Alarm_, _ns1__AlarmResponse &ns1__AlarmResponse) { return this->send_Alarm_(soap_endpoint_url, soap_action, ns1__Alarm_) || this->recv_Alarm_(ns1__AlarmResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Alarm' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Alarm_(const char *soap_endpoint_url, const char *soap_action, _ns1__Alarm *ns1__Alarm_);
        /// Web service asynchronous operation 'recv_Alarm' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Alarm_(_ns1__AlarmResponse &ns1__AlarmResponse);
        //
        /// Web service synchronous operation 'BindContainer' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int BindContainer(_ns1__BindContainer *ns1__BindContainer_, _ns1__BindContainerResponse &ns1__BindContainerResponse) { return this->BindContainer(NULL, NULL, ns1__BindContainer_, ns1__BindContainerResponse); }
        /// Web service synchronous operation 'BindContainer' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int BindContainer(const char *soap_endpoint_url, const char *soap_action, _ns1__BindContainer *ns1__BindContainer_, _ns1__BindContainerResponse &ns1__BindContainerResponse) { return this->send_BindContainer(soap_endpoint_url, soap_action, ns1__BindContainer_) || this->recv_BindContainer(ns1__BindContainerResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_BindContainer' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_BindContainer(const char *soap_endpoint_url, const char *soap_action, _ns1__BindContainer *ns1__BindContainer_);
        /// Web service asynchronous operation 'recv_BindContainer' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_BindContainer(_ns1__BindContainerResponse &ns1__BindContainerResponse);
        //
        /// Web service synchronous operation 'BindContainer' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int BindContainer_(_ns1__BindContainer *ns1__BindContainer_, _ns1__BindContainerResponse &ns1__BindContainerResponse) { return this->BindContainer_(NULL, NULL, ns1__BindContainer_, ns1__BindContainerResponse); }
        /// Web service synchronous operation 'BindContainer' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int BindContainer_(const char *soap_endpoint_url, const char *soap_action, _ns1__BindContainer *ns1__BindContainer_, _ns1__BindContainerResponse &ns1__BindContainerResponse) { return this->send_BindContainer_(soap_endpoint_url, soap_action, ns1__BindContainer_) || this->recv_BindContainer_(ns1__BindContainerResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_BindContainer' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_BindContainer_(const char *soap_endpoint_url, const char *soap_action, _ns1__BindContainer *ns1__BindContainer_);
        /// Web service asynchronous operation 'recv_BindContainer' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_BindContainer_(_ns1__BindContainerResponse &ns1__BindContainerResponse);
        //
        /// Web service synchronous operation 'BindSFC' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int BindSFC(_ns1__BindSFC *ns1__BindSFC, _ns1__BindSFCResponse &ns1__BindSFCResponse) { return this->BindSFC(NULL, NULL, ns1__BindSFC, ns1__BindSFCResponse); }
        /// Web service synchronous operation 'BindSFC' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int BindSFC(const char *soap_endpoint_url, const char *soap_action, _ns1__BindSFC *ns1__BindSFC, _ns1__BindSFCResponse &ns1__BindSFCResponse) { return this->send_BindSFC(soap_endpoint_url, soap_action, ns1__BindSFC) || this->recv_BindSFC(ns1__BindSFCResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_BindSFC' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_BindSFC(const char *soap_endpoint_url, const char *soap_action, _ns1__BindSFC *ns1__BindSFC);
        /// Web service asynchronous operation 'recv_BindSFC' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_BindSFC(_ns1__BindSFCResponse &ns1__BindSFCResponse);
        //
        /// Web service synchronous operation 'BindSFC' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int BindSFC_(_ns1__BindSFC *ns1__BindSFC, _ns1__BindSFCResponse &ns1__BindSFCResponse) { return this->BindSFC_(NULL, NULL, ns1__BindSFC, ns1__BindSFCResponse); }
        /// Web service synchronous operation 'BindSFC' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int BindSFC_(const char *soap_endpoint_url, const char *soap_action, _ns1__BindSFC *ns1__BindSFC, _ns1__BindSFCResponse &ns1__BindSFCResponse) { return this->send_BindSFC_(soap_endpoint_url, soap_action, ns1__BindSFC) || this->recv_BindSFC_(ns1__BindSFCResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_BindSFC' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_BindSFC_(const char *soap_endpoint_url, const char *soap_action, _ns1__BindSFC *ns1__BindSFC);
        /// Web service asynchronous operation 'recv_BindSFC' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_BindSFC_(_ns1__BindSFCResponse &ns1__BindSFCResponse);
        //
        /// Web service synchronous operation 'CCDFileUploadComplete' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int CCDFileUploadComplete(_ns1__CCDFileUploadComplete *ns1__CCDFileUploadComplete_, _ns1__CCDFileUploadCompleteResponse &ns1__CCDFileUploadCompleteResponse) { return this->CCDFileUploadComplete(NULL, NULL, ns1__CCDFileUploadComplete_, ns1__CCDFileUploadCompleteResponse); }
        /// Web service synchronous operation 'CCDFileUploadComplete' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int CCDFileUploadComplete(const char *soap_endpoint_url, const char *soap_action, _ns1__CCDFileUploadComplete *ns1__CCDFileUploadComplete_, _ns1__CCDFileUploadCompleteResponse &ns1__CCDFileUploadCompleteResponse) { return this->send_CCDFileUploadComplete(soap_endpoint_url, soap_action, ns1__CCDFileUploadComplete_) || this->recv_CCDFileUploadComplete(ns1__CCDFileUploadCompleteResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_CCDFileUploadComplete' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_CCDFileUploadComplete(const char *soap_endpoint_url, const char *soap_action, _ns1__CCDFileUploadComplete *ns1__CCDFileUploadComplete_);
        /// Web service asynchronous operation 'recv_CCDFileUploadComplete' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_CCDFileUploadComplete(_ns1__CCDFileUploadCompleteResponse &ns1__CCDFileUploadCompleteResponse);
        //
        /// Web service synchronous operation 'CCDFileUploadComplete' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int CCDFileUploadComplete_(_ns1__CCDFileUploadComplete *ns1__CCDFileUploadComplete_, _ns1__CCDFileUploadCompleteResponse &ns1__CCDFileUploadCompleteResponse) { return this->CCDFileUploadComplete_(NULL, NULL, ns1__CCDFileUploadComplete_, ns1__CCDFileUploadCompleteResponse); }
        /// Web service synchronous operation 'CCDFileUploadComplete' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int CCDFileUploadComplete_(const char *soap_endpoint_url, const char *soap_action, _ns1__CCDFileUploadComplete *ns1__CCDFileUploadComplete_, _ns1__CCDFileUploadCompleteResponse &ns1__CCDFileUploadCompleteResponse) { return this->send_CCDFileUploadComplete_(soap_endpoint_url, soap_action, ns1__CCDFileUploadComplete_) || this->recv_CCDFileUploadComplete_(ns1__CCDFileUploadCompleteResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_CCDFileUploadComplete' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_CCDFileUploadComplete_(const char *soap_endpoint_url, const char *soap_action, _ns1__CCDFileUploadComplete *ns1__CCDFileUploadComplete_);
        /// Web service asynchronous operation 'recv_CCDFileUploadComplete' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_CCDFileUploadComplete_(_ns1__CCDFileUploadCompleteResponse &ns1__CCDFileUploadCompleteResponse);
        //
        /// Web service synchronous operation 'DownReason' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DownReason(_ns1__DownReason *ns1__DownReason_, _ns1__DownReasonResponse &ns1__DownReasonResponse) { return this->DownReason(NULL, NULL, ns1__DownReason_, ns1__DownReasonResponse); }
        /// Web service synchronous operation 'DownReason' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DownReason(const char *soap_endpoint_url, const char *soap_action, _ns1__DownReason *ns1__DownReason_, _ns1__DownReasonResponse &ns1__DownReasonResponse) { return this->send_DownReason(soap_endpoint_url, soap_action, ns1__DownReason_) || this->recv_DownReason(ns1__DownReasonResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DownReason' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DownReason(const char *soap_endpoint_url, const char *soap_action, _ns1__DownReason *ns1__DownReason_);
        /// Web service asynchronous operation 'recv_DownReason' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DownReason(_ns1__DownReasonResponse &ns1__DownReasonResponse);
        //
        /// Web service synchronous operation 'DownReason' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DownReason_(_ns1__DownReason *ns1__DownReason_, _ns1__DownReasonResponse &ns1__DownReasonResponse) { return this->DownReason_(NULL, NULL, ns1__DownReason_, ns1__DownReasonResponse); }
        /// Web service synchronous operation 'DownReason' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DownReason_(const char *soap_endpoint_url, const char *soap_action, _ns1__DownReason *ns1__DownReason_, _ns1__DownReasonResponse &ns1__DownReasonResponse) { return this->send_DownReason_(soap_endpoint_url, soap_action, ns1__DownReason_) || this->recv_DownReason_(ns1__DownReasonResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DownReason' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DownReason_(const char *soap_endpoint_url, const char *soap_action, _ns1__DownReason *ns1__DownReason_);
        /// Web service asynchronous operation 'recv_DownReason' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DownReason_(_ns1__DownReasonResponse &ns1__DownReasonResponse);
        //
        /// Web service synchronous operation 'EquipmentProcessParam' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int EquipmentProcessParam(_ns1__EquipmentProcessParam *ns1__EquipmentProcessParam_, _ns1__EquipmentProcessParamResponse &ns1__EquipmentProcessParamResponse) { return this->EquipmentProcessParam(NULL, NULL, ns1__EquipmentProcessParam_, ns1__EquipmentProcessParamResponse); }
        /// Web service synchronous operation 'EquipmentProcessParam' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int EquipmentProcessParam(const char *soap_endpoint_url, const char *soap_action, _ns1__EquipmentProcessParam *ns1__EquipmentProcessParam_, _ns1__EquipmentProcessParamResponse &ns1__EquipmentProcessParamResponse) { return this->send_EquipmentProcessParam(soap_endpoint_url, soap_action, ns1__EquipmentProcessParam_) || this->recv_EquipmentProcessParam(ns1__EquipmentProcessParamResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_EquipmentProcessParam' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_EquipmentProcessParam(const char *soap_endpoint_url, const char *soap_action, _ns1__EquipmentProcessParam *ns1__EquipmentProcessParam_);
        /// Web service asynchronous operation 'recv_EquipmentProcessParam' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_EquipmentProcessParam(_ns1__EquipmentProcessParamResponse &ns1__EquipmentProcessParamResponse);
        //
        /// Web service synchronous operation 'EquipmentProcessParam' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int EquipmentProcessParam_(_ns1__EquipmentProcessParam *ns1__EquipmentProcessParam_, _ns1__EquipmentProcessParamResponse &ns1__EquipmentProcessParamResponse) { return this->EquipmentProcessParam_(NULL, NULL, ns1__EquipmentProcessParam_, ns1__EquipmentProcessParamResponse); }
        /// Web service synchronous operation 'EquipmentProcessParam' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int EquipmentProcessParam_(const char *soap_endpoint_url, const char *soap_action, _ns1__EquipmentProcessParam *ns1__EquipmentProcessParam_, _ns1__EquipmentProcessParamResponse &ns1__EquipmentProcessParamResponse) { return this->send_EquipmentProcessParam_(soap_endpoint_url, soap_action, ns1__EquipmentProcessParam_) || this->recv_EquipmentProcessParam_(ns1__EquipmentProcessParamResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_EquipmentProcessParam' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_EquipmentProcessParam_(const char *soap_endpoint_url, const char *soap_action, _ns1__EquipmentProcessParam *ns1__EquipmentProcessParam_);
        /// Web service asynchronous operation 'recv_EquipmentProcessParam' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_EquipmentProcessParam_(_ns1__EquipmentProcessParamResponse &ns1__EquipmentProcessParamResponse);
        //
        /// Web service synchronous operation 'EquipmentProductProcessParam' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int EquipmentProductProcessParam(_ns1__EquipmentProductProcessParam *ns1__EquipmentProductProcessParam_, _ns1__EquipmentProductProcessParamResponse &ns1__EquipmentProductProcessParamResponse) { return this->EquipmentProductProcessParam(NULL, NULL, ns1__EquipmentProductProcessParam_, ns1__EquipmentProductProcessParamResponse); }
        /// Web service synchronous operation 'EquipmentProductProcessParam' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int EquipmentProductProcessParam(const char *soap_endpoint_url, const char *soap_action, _ns1__EquipmentProductProcessParam *ns1__EquipmentProductProcessParam_, _ns1__EquipmentProductProcessParamResponse &ns1__EquipmentProductProcessParamResponse) { return this->send_EquipmentProductProcessParam(soap_endpoint_url, soap_action, ns1__EquipmentProductProcessParam_) || this->recv_EquipmentProductProcessParam(ns1__EquipmentProductProcessParamResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_EquipmentProductProcessParam' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_EquipmentProductProcessParam(const char *soap_endpoint_url, const char *soap_action, _ns1__EquipmentProductProcessParam *ns1__EquipmentProductProcessParam_);
        /// Web service asynchronous operation 'recv_EquipmentProductProcessParam' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_EquipmentProductProcessParam(_ns1__EquipmentProductProcessParamResponse &ns1__EquipmentProductProcessParamResponse);
        //
        /// Web service synchronous operation 'EquipmentProductProcessParam' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int EquipmentProductProcessParam_(_ns1__EquipmentProductProcessParam *ns1__EquipmentProductProcessParam_, _ns1__EquipmentProductProcessParamResponse &ns1__EquipmentProductProcessParamResponse) { return this->EquipmentProductProcessParam_(NULL, NULL, ns1__EquipmentProductProcessParam_, ns1__EquipmentProductProcessParamResponse); }
        /// Web service synchronous operation 'EquipmentProductProcessParam' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int EquipmentProductProcessParam_(const char *soap_endpoint_url, const char *soap_action, _ns1__EquipmentProductProcessParam *ns1__EquipmentProductProcessParam_, _ns1__EquipmentProductProcessParamResponse &ns1__EquipmentProductProcessParamResponse) { return this->send_EquipmentProductProcessParam_(soap_endpoint_url, soap_action, ns1__EquipmentProductProcessParam_) || this->recv_EquipmentProductProcessParam_(ns1__EquipmentProductProcessParamResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_EquipmentProductProcessParam' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_EquipmentProductProcessParam_(const char *soap_endpoint_url, const char *soap_action, _ns1__EquipmentProductProcessParam *ns1__EquipmentProductProcessParam_);
        /// Web service asynchronous operation 'recv_EquipmentProductProcessParam' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_EquipmentProductProcessParam_(_ns1__EquipmentProductProcessParamResponse &ns1__EquipmentProductProcessParamResponse);
        //
        /// Web service synchronous operation 'ExamineExists' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ExamineExists(_ns1__ExamineExists *ns1__ExamineExists, _ns1__ExamineExistsResponse &ns1__ExamineExistsResponse) { return this->ExamineExists(NULL, NULL, ns1__ExamineExists, ns1__ExamineExistsResponse); }
        /// Web service synchronous operation 'ExamineExists' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ExamineExists(const char *soap_endpoint_url, const char *soap_action, _ns1__ExamineExists *ns1__ExamineExists, _ns1__ExamineExistsResponse &ns1__ExamineExistsResponse) { return this->send_ExamineExists(soap_endpoint_url, soap_action, ns1__ExamineExists) || this->recv_ExamineExists(ns1__ExamineExistsResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ExamineExists' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ExamineExists(const char *soap_endpoint_url, const char *soap_action, _ns1__ExamineExists *ns1__ExamineExists);
        /// Web service asynchronous operation 'recv_ExamineExists' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ExamineExists(_ns1__ExamineExistsResponse &ns1__ExamineExistsResponse);
        //
        /// Web service synchronous operation 'ExamineExists' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ExamineExists_(_ns1__ExamineExists *ns1__ExamineExists, _ns1__ExamineExistsResponse &ns1__ExamineExistsResponse) { return this->ExamineExists_(NULL, NULL, ns1__ExamineExists, ns1__ExamineExistsResponse); }
        /// Web service synchronous operation 'ExamineExists' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ExamineExists_(const char *soap_endpoint_url, const char *soap_action, _ns1__ExamineExists *ns1__ExamineExists, _ns1__ExamineExistsResponse &ns1__ExamineExistsResponse) { return this->send_ExamineExists_(soap_endpoint_url, soap_action, ns1__ExamineExists) || this->recv_ExamineExists_(ns1__ExamineExistsResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ExamineExists' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ExamineExists_(const char *soap_endpoint_url, const char *soap_action, _ns1__ExamineExists *ns1__ExamineExists);
        /// Web service asynchronous operation 'recv_ExamineExists' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ExamineExists_(_ns1__ExamineExistsResponse &ns1__ExamineExistsResponse);
        //
        /// Web service synchronous operation 'Feeding' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Feeding(_ns1__Feeding *ns1__Feeding, _ns1__FeedingResponse &ns1__FeedingResponse) { return this->Feeding(NULL, NULL, ns1__Feeding, ns1__FeedingResponse); }
        /// Web service synchronous operation 'Feeding' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Feeding(const char *soap_endpoint_url, const char *soap_action, _ns1__Feeding *ns1__Feeding, _ns1__FeedingResponse &ns1__FeedingResponse) { return this->send_Feeding(soap_endpoint_url, soap_action, ns1__Feeding) || this->recv_Feeding(ns1__FeedingResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Feeding' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Feeding(const char *soap_endpoint_url, const char *soap_action, _ns1__Feeding *ns1__Feeding);
        /// Web service asynchronous operation 'recv_Feeding' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Feeding(_ns1__FeedingResponse &ns1__FeedingResponse);
        //
        /// Web service synchronous operation 'Feeding' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Feeding_(_ns1__Feeding *ns1__Feeding, _ns1__FeedingResponse &ns1__FeedingResponse) { return this->Feeding_(NULL, NULL, ns1__Feeding, ns1__FeedingResponse); }
        /// Web service synchronous operation 'Feeding' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Feeding_(const char *soap_endpoint_url, const char *soap_action, _ns1__Feeding *ns1__Feeding, _ns1__FeedingResponse &ns1__FeedingResponse) { return this->send_Feeding_(soap_endpoint_url, soap_action, ns1__Feeding) || this->recv_Feeding_(ns1__FeedingResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Feeding' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Feeding_(const char *soap_endpoint_url, const char *soap_action, _ns1__Feeding *ns1__Feeding);
        /// Web service asynchronous operation 'recv_Feeding' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Feeding_(_ns1__FeedingResponse &ns1__FeedingResponse);
        //
        /// Web service synchronous operation 'FeedingDJInLaminating' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FeedingDJInLaminating(_ns1__FeedingDJInLaminating *ns1__FeedingDJInLaminating, _ns1__FeedingDJInLaminatingResponse &ns1__FeedingDJInLaminatingResponse) { return this->FeedingDJInLaminating(NULL, NULL, ns1__FeedingDJInLaminating, ns1__FeedingDJInLaminatingResponse); }
        /// Web service synchronous operation 'FeedingDJInLaminating' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FeedingDJInLaminating(const char *soap_endpoint_url, const char *soap_action, _ns1__FeedingDJInLaminating *ns1__FeedingDJInLaminating, _ns1__FeedingDJInLaminatingResponse &ns1__FeedingDJInLaminatingResponse) { return this->send_FeedingDJInLaminating(soap_endpoint_url, soap_action, ns1__FeedingDJInLaminating) || this->recv_FeedingDJInLaminating(ns1__FeedingDJInLaminatingResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FeedingDJInLaminating' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FeedingDJInLaminating(const char *soap_endpoint_url, const char *soap_action, _ns1__FeedingDJInLaminating *ns1__FeedingDJInLaminating);
        /// Web service asynchronous operation 'recv_FeedingDJInLaminating' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FeedingDJInLaminating(_ns1__FeedingDJInLaminatingResponse &ns1__FeedingDJInLaminatingResponse);
        //
        /// Web service synchronous operation 'FeedingDJInLaminating' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FeedingDJInLaminating_(_ns1__FeedingDJInLaminating *ns1__FeedingDJInLaminating, _ns1__FeedingDJInLaminatingResponse &ns1__FeedingDJInLaminatingResponse) { return this->FeedingDJInLaminating_(NULL, NULL, ns1__FeedingDJInLaminating, ns1__FeedingDJInLaminatingResponse); }
        /// Web service synchronous operation 'FeedingDJInLaminating' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FeedingDJInLaminating_(const char *soap_endpoint_url, const char *soap_action, _ns1__FeedingDJInLaminating *ns1__FeedingDJInLaminating, _ns1__FeedingDJInLaminatingResponse &ns1__FeedingDJInLaminatingResponse) { return this->send_FeedingDJInLaminating_(soap_endpoint_url, soap_action, ns1__FeedingDJInLaminating) || this->recv_FeedingDJInLaminating_(ns1__FeedingDJInLaminatingResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FeedingDJInLaminating' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FeedingDJInLaminating_(const char *soap_endpoint_url, const char *soap_action, _ns1__FeedingDJInLaminating *ns1__FeedingDJInLaminating);
        /// Web service asynchronous operation 'recv_FeedingDJInLaminating' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FeedingDJInLaminating_(_ns1__FeedingDJInLaminatingResponse &ns1__FeedingDJInLaminatingResponse);
        //
        /// Web service synchronous operation 'FillingData' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FillingData(_ns1__FillingData *ns1__FillingData_, _ns1__FillingDataResponse &ns1__FillingDataResponse) { return this->FillingData(NULL, NULL, ns1__FillingData_, ns1__FillingDataResponse); }
        /// Web service synchronous operation 'FillingData' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FillingData(const char *soap_endpoint_url, const char *soap_action, _ns1__FillingData *ns1__FillingData_, _ns1__FillingDataResponse &ns1__FillingDataResponse) { return this->send_FillingData(soap_endpoint_url, soap_action, ns1__FillingData_) || this->recv_FillingData(ns1__FillingDataResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FillingData' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FillingData(const char *soap_endpoint_url, const char *soap_action, _ns1__FillingData *ns1__FillingData_);
        /// Web service asynchronous operation 'recv_FillingData' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FillingData(_ns1__FillingDataResponse &ns1__FillingDataResponse);
        //
        /// Web service synchronous operation 'FillingData' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FillingData_(_ns1__FillingData *ns1__FillingData_, _ns1__FillingDataResponse &ns1__FillingDataResponse) { return this->FillingData_(NULL, NULL, ns1__FillingData_, ns1__FillingDataResponse); }
        /// Web service synchronous operation 'FillingData' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FillingData_(const char *soap_endpoint_url, const char *soap_action, _ns1__FillingData *ns1__FillingData_, _ns1__FillingDataResponse &ns1__FillingDataResponse) { return this->send_FillingData_(soap_endpoint_url, soap_action, ns1__FillingData_) || this->recv_FillingData_(ns1__FillingDataResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FillingData' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FillingData_(const char *soap_endpoint_url, const char *soap_action, _ns1__FillingData *ns1__FillingData_);
        /// Web service asynchronous operation 'recv_FillingData' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FillingData_(_ns1__FillingDataResponse &ns1__FillingDataResponse);
        //
        /// Web service synchronous operation 'GenerateCellSFC' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GenerateCellSFC(_ns1__GenerateCellSFC *ns1__GenerateCellSFC_, _ns1__GenerateCellSFCResponse &ns1__GenerateCellSFCResponse) { return this->GenerateCellSFC(NULL, NULL, ns1__GenerateCellSFC_, ns1__GenerateCellSFCResponse); }
        /// Web service synchronous operation 'GenerateCellSFC' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GenerateCellSFC(const char *soap_endpoint_url, const char *soap_action, _ns1__GenerateCellSFC *ns1__GenerateCellSFC_, _ns1__GenerateCellSFCResponse &ns1__GenerateCellSFCResponse) { return this->send_GenerateCellSFC(soap_endpoint_url, soap_action, ns1__GenerateCellSFC_) || this->recv_GenerateCellSFC(ns1__GenerateCellSFCResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GenerateCellSFC' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GenerateCellSFC(const char *soap_endpoint_url, const char *soap_action, _ns1__GenerateCellSFC *ns1__GenerateCellSFC_);
        /// Web service asynchronous operation 'recv_GenerateCellSFC' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GenerateCellSFC(_ns1__GenerateCellSFCResponse &ns1__GenerateCellSFCResponse);
        //
        /// Web service synchronous operation 'GenerateCellSFC' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GenerateCellSFC_(_ns1__GenerateCellSFC *ns1__GenerateCellSFC_, _ns1__GenerateCellSFCResponse &ns1__GenerateCellSFCResponse) { return this->GenerateCellSFC_(NULL, NULL, ns1__GenerateCellSFC_, ns1__GenerateCellSFCResponse); }
        /// Web service synchronous operation 'GenerateCellSFC' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GenerateCellSFC_(const char *soap_endpoint_url, const char *soap_action, _ns1__GenerateCellSFC *ns1__GenerateCellSFC_, _ns1__GenerateCellSFCResponse &ns1__GenerateCellSFCResponse) { return this->send_GenerateCellSFC_(soap_endpoint_url, soap_action, ns1__GenerateCellSFC_) || this->recv_GenerateCellSFC_(ns1__GenerateCellSFCResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GenerateCellSFC' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GenerateCellSFC_(const char *soap_endpoint_url, const char *soap_action, _ns1__GenerateCellSFC *ns1__GenerateCellSFC_);
        /// Web service asynchronous operation 'recv_GenerateCellSFC' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GenerateCellSFC_(_ns1__GenerateCellSFCResponse &ns1__GenerateCellSFCResponse);
        //
        /// Web service synchronous operation 'Heartbeat' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Heartbeat(_ns1__Heartbeat *ns1__Heartbeat_, _ns1__HeartbeatResponse &ns1__HeartbeatResponse) { return this->Heartbeat(NULL, NULL, ns1__Heartbeat_, ns1__HeartbeatResponse); }
        /// Web service synchronous operation 'Heartbeat' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Heartbeat(const char *soap_endpoint_url, const char *soap_action, _ns1__Heartbeat *ns1__Heartbeat_, _ns1__HeartbeatResponse &ns1__HeartbeatResponse) { return this->send_Heartbeat(soap_endpoint_url, soap_action, ns1__Heartbeat_) || this->recv_Heartbeat(ns1__HeartbeatResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Heartbeat' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Heartbeat(const char *soap_endpoint_url, const char *soap_action, _ns1__Heartbeat *ns1__Heartbeat_);
        /// Web service asynchronous operation 'recv_Heartbeat' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Heartbeat(_ns1__HeartbeatResponse &ns1__HeartbeatResponse);
        //
        /// Web service synchronous operation 'Heartbeat' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Heartbeat_(_ns1__Heartbeat *ns1__Heartbeat_, _ns1__HeartbeatResponse &ns1__HeartbeatResponse) { return this->Heartbeat_(NULL, NULL, ns1__Heartbeat_, ns1__HeartbeatResponse); }
        /// Web service synchronous operation 'Heartbeat' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Heartbeat_(const char *soap_endpoint_url, const char *soap_action, _ns1__Heartbeat *ns1__Heartbeat_, _ns1__HeartbeatResponse &ns1__HeartbeatResponse) { return this->send_Heartbeat_(soap_endpoint_url, soap_action, ns1__Heartbeat_) || this->recv_Heartbeat_(ns1__HeartbeatResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Heartbeat' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Heartbeat_(const char *soap_endpoint_url, const char *soap_action, _ns1__Heartbeat *ns1__Heartbeat_);
        /// Web service asynchronous operation 'recv_Heartbeat' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Heartbeat_(_ns1__HeartbeatResponse &ns1__HeartbeatResponse);
        //
        /// Web service synchronous operation 'Inbound' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Inbound(_ns1__Inbound *ns1__Inbound_, _ns1__InboundResponse &ns1__InboundResponse) { return this->Inbound(NULL, NULL, ns1__Inbound_, ns1__InboundResponse); }
        /// Web service synchronous operation 'Inbound' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Inbound(const char *soap_endpoint_url, const char *soap_action, _ns1__Inbound *ns1__Inbound_, _ns1__InboundResponse &ns1__InboundResponse) { return this->send_Inbound(soap_endpoint_url, soap_action, ns1__Inbound_) || this->recv_Inbound(ns1__InboundResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Inbound' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Inbound(const char *soap_endpoint_url, const char *soap_action, _ns1__Inbound *ns1__Inbound_);
        /// Web service asynchronous operation 'recv_Inbound' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Inbound(_ns1__InboundResponse &ns1__InboundResponse);
        //
        /// Web service synchronous operation 'Inbound' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Inbound_(_ns1__Inbound *ns1__Inbound_, _ns1__InboundResponse &ns1__InboundResponse) { return this->Inbound_(NULL, NULL, ns1__Inbound_, ns1__InboundResponse); }
        /// Web service synchronous operation 'Inbound' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Inbound_(const char *soap_endpoint_url, const char *soap_action, _ns1__Inbound *ns1__Inbound_, _ns1__InboundResponse &ns1__InboundResponse) { return this->send_Inbound_(soap_endpoint_url, soap_action, ns1__Inbound_) || this->recv_Inbound_(ns1__InboundResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Inbound' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Inbound_(const char *soap_endpoint_url, const char *soap_action, _ns1__Inbound *ns1__Inbound_);
        /// Web service asynchronous operation 'recv_Inbound' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Inbound_(_ns1__InboundResponse &ns1__InboundResponse);
        //
        /// Web service synchronous operation 'InboundInContainer' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInContainer(_ns1__InboundInContainer *ns1__InboundInContainer_, _ns1__InboundInContainerResponse &ns1__InboundInContainerResponse) { return this->InboundInContainer(NULL, NULL, ns1__InboundInContainer_, ns1__InboundInContainerResponse); }
        /// Web service synchronous operation 'InboundInContainer' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInContainer(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInContainer *ns1__InboundInContainer_, _ns1__InboundInContainerResponse &ns1__InboundInContainerResponse) { return this->send_InboundInContainer(soap_endpoint_url, soap_action, ns1__InboundInContainer_) || this->recv_InboundInContainer(ns1__InboundInContainerResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InboundInContainer' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InboundInContainer(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInContainer *ns1__InboundInContainer_);
        /// Web service asynchronous operation 'recv_InboundInContainer' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InboundInContainer(_ns1__InboundInContainerResponse &ns1__InboundInContainerResponse);
        //
        /// Web service synchronous operation 'InboundInContainer' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInContainer_(_ns1__InboundInContainer *ns1__InboundInContainer_, _ns1__InboundInContainerResponse &ns1__InboundInContainerResponse) { return this->InboundInContainer_(NULL, NULL, ns1__InboundInContainer_, ns1__InboundInContainerResponse); }
        /// Web service synchronous operation 'InboundInContainer' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInContainer_(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInContainer *ns1__InboundInContainer_, _ns1__InboundInContainerResponse &ns1__InboundInContainerResponse) { return this->send_InboundInContainer_(soap_endpoint_url, soap_action, ns1__InboundInContainer_) || this->recv_InboundInContainer_(ns1__InboundInContainerResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InboundInContainer' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InboundInContainer_(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInContainer *ns1__InboundInContainer_);
        /// Web service asynchronous operation 'recv_InboundInContainer' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InboundInContainer_(_ns1__InboundInContainerResponse &ns1__InboundInContainerResponse);
        //
        /// Web service synchronous operation 'InboundInSFCContainer' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInSFCContainer(_ns1__InboundInSFCContainer *ns1__InboundInSFCContainer_, _ns1__InboundInSFCContainerResponse &ns1__InboundInSFCContainerResponse) { return this->InboundInSFCContainer(NULL, NULL, ns1__InboundInSFCContainer_, ns1__InboundInSFCContainerResponse); }
        /// Web service synchronous operation 'InboundInSFCContainer' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInSFCContainer(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInSFCContainer *ns1__InboundInSFCContainer_, _ns1__InboundInSFCContainerResponse &ns1__InboundInSFCContainerResponse) { return this->send_InboundInSFCContainer(soap_endpoint_url, soap_action, ns1__InboundInSFCContainer_) || this->recv_InboundInSFCContainer(ns1__InboundInSFCContainerResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InboundInSFCContainer' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InboundInSFCContainer(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInSFCContainer *ns1__InboundInSFCContainer_);
        /// Web service asynchronous operation 'recv_InboundInSFCContainer' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InboundInSFCContainer(_ns1__InboundInSFCContainerResponse &ns1__InboundInSFCContainerResponse);
        //
        /// Web service synchronous operation 'InboundInSFCContainer' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInSFCContainer_(_ns1__InboundInSFCContainer *ns1__InboundInSFCContainer_, _ns1__InboundInSFCContainerResponse &ns1__InboundInSFCContainerResponse) { return this->InboundInSFCContainer_(NULL, NULL, ns1__InboundInSFCContainer_, ns1__InboundInSFCContainerResponse); }
        /// Web service synchronous operation 'InboundInSFCContainer' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInSFCContainer_(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInSFCContainer *ns1__InboundInSFCContainer_, _ns1__InboundInSFCContainerResponse &ns1__InboundInSFCContainerResponse) { return this->send_InboundInSFCContainer_(soap_endpoint_url, soap_action, ns1__InboundInSFCContainer_) || this->recv_InboundInSFCContainer_(ns1__InboundInSFCContainerResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InboundInSFCContainer' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InboundInSFCContainer_(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInSFCContainer *ns1__InboundInSFCContainer_);
        /// Web service asynchronous operation 'recv_InboundInSFCContainer' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InboundInSFCContainer_(_ns1__InboundInSFCContainerResponse &ns1__InboundInSFCContainerResponse);
        //
        /// Web service synchronous operation 'InboundInTwoInjection' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInTwoInjection(_ns1__InboundInTwoInjection *ns1__InboundInTwoInjection_, _ns1__InboundInTwoInjectionResponse &ns1__InboundInTwoInjectionResponse) { return this->InboundInTwoInjection(NULL, NULL, ns1__InboundInTwoInjection_, ns1__InboundInTwoInjectionResponse); }
        /// Web service synchronous operation 'InboundInTwoInjection' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInTwoInjection(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInTwoInjection *ns1__InboundInTwoInjection_, _ns1__InboundInTwoInjectionResponse &ns1__InboundInTwoInjectionResponse) { return this->send_InboundInTwoInjection(soap_endpoint_url, soap_action, ns1__InboundInTwoInjection_) || this->recv_InboundInTwoInjection(ns1__InboundInTwoInjectionResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InboundInTwoInjection' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InboundInTwoInjection(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInTwoInjection *ns1__InboundInTwoInjection_);
        /// Web service asynchronous operation 'recv_InboundInTwoInjection' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InboundInTwoInjection(_ns1__InboundInTwoInjectionResponse &ns1__InboundInTwoInjectionResponse);
        //
        /// Web service synchronous operation 'InboundInTwoInjection' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInTwoInjection_(_ns1__InboundInTwoInjection *ns1__InboundInTwoInjection_, _ns1__InboundInTwoInjectionResponse &ns1__InboundInTwoInjectionResponse) { return this->InboundInTwoInjection_(NULL, NULL, ns1__InboundInTwoInjection_, ns1__InboundInTwoInjectionResponse); }
        /// Web service synchronous operation 'InboundInTwoInjection' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InboundInTwoInjection_(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInTwoInjection *ns1__InboundInTwoInjection_, _ns1__InboundInTwoInjectionResponse &ns1__InboundInTwoInjectionResponse) { return this->send_InboundInTwoInjection_(soap_endpoint_url, soap_action, ns1__InboundInTwoInjection_) || this->recv_InboundInTwoInjection_(ns1__InboundInTwoInjectionResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InboundInTwoInjection' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InboundInTwoInjection_(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundInTwoInjection *ns1__InboundInTwoInjection_);
        /// Web service asynchronous operation 'recv_InboundInTwoInjection' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InboundInTwoInjection_(_ns1__InboundInTwoInjectionResponse &ns1__InboundInTwoInjectionResponse);
        //
        /// Web service synchronous operation 'InboundMore' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InboundMore(_ns1__InboundMore *ns1__InboundMore_, _ns1__InboundMoreResponse &ns1__InboundMoreResponse) { return this->InboundMore(NULL, NULL, ns1__InboundMore_, ns1__InboundMoreResponse); }
        /// Web service synchronous operation 'InboundMore' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InboundMore(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundMore *ns1__InboundMore_, _ns1__InboundMoreResponse &ns1__InboundMoreResponse) { return this->send_InboundMore(soap_endpoint_url, soap_action, ns1__InboundMore_) || this->recv_InboundMore(ns1__InboundMoreResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InboundMore' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InboundMore(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundMore *ns1__InboundMore_);
        /// Web service asynchronous operation 'recv_InboundMore' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InboundMore(_ns1__InboundMoreResponse &ns1__InboundMoreResponse);
        //
        /// Web service synchronous operation 'InboundMore' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InboundMore_(_ns1__InboundMore *ns1__InboundMore_, _ns1__InboundMoreResponse &ns1__InboundMoreResponse) { return this->InboundMore_(NULL, NULL, ns1__InboundMore_, ns1__InboundMoreResponse); }
        /// Web service synchronous operation 'InboundMore' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InboundMore_(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundMore *ns1__InboundMore_, _ns1__InboundMoreResponse &ns1__InboundMoreResponse) { return this->send_InboundMore_(soap_endpoint_url, soap_action, ns1__InboundMore_) || this->recv_InboundMore_(ns1__InboundMoreResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InboundMore' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InboundMore_(const char *soap_endpoint_url, const char *soap_action, _ns1__InboundMore *ns1__InboundMore_);
        /// Web service asynchronous operation 'recv_InboundMore' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InboundMore_(_ns1__InboundMoreResponse &ns1__InboundMoreResponse);
        //
        /// Web service synchronous operation 'OperatorLogin' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int OperatorLogin(_ns1__OperatorLogin *ns1__OperatorLogin_, _ns1__OperatorLoginResponse &ns1__OperatorLoginResponse) { return this->OperatorLogin(NULL, NULL, ns1__OperatorLogin_, ns1__OperatorLoginResponse); }
        /// Web service synchronous operation 'OperatorLogin' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int OperatorLogin(const char *soap_endpoint_url, const char *soap_action, _ns1__OperatorLogin *ns1__OperatorLogin_, _ns1__OperatorLoginResponse &ns1__OperatorLoginResponse) { return this->send_OperatorLogin(soap_endpoint_url, soap_action, ns1__OperatorLogin_) || this->recv_OperatorLogin(ns1__OperatorLoginResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_OperatorLogin' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_OperatorLogin(const char *soap_endpoint_url, const char *soap_action, _ns1__OperatorLogin *ns1__OperatorLogin_);
        /// Web service asynchronous operation 'recv_OperatorLogin' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_OperatorLogin(_ns1__OperatorLoginResponse &ns1__OperatorLoginResponse);
        //
        /// Web service synchronous operation 'OperatorLogin' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int OperatorLogin_(_ns1__OperatorLogin *ns1__OperatorLogin_, _ns1__OperatorLoginResponse &ns1__OperatorLoginResponse) { return this->OperatorLogin_(NULL, NULL, ns1__OperatorLogin_, ns1__OperatorLoginResponse); }
        /// Web service synchronous operation 'OperatorLogin' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int OperatorLogin_(const char *soap_endpoint_url, const char *soap_action, _ns1__OperatorLogin *ns1__OperatorLogin_, _ns1__OperatorLoginResponse &ns1__OperatorLoginResponse) { return this->send_OperatorLogin_(soap_endpoint_url, soap_action, ns1__OperatorLogin_) || this->recv_OperatorLogin_(ns1__OperatorLoginResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_OperatorLogin' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_OperatorLogin_(const char *soap_endpoint_url, const char *soap_action, _ns1__OperatorLogin *ns1__OperatorLogin_);
        /// Web service asynchronous operation 'recv_OperatorLogin' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_OperatorLogin_(_ns1__OperatorLoginResponse &ns1__OperatorLoginResponse);
        //
        /// Web service synchronous operation 'Outbound' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Outbound(_ns1__Outbound *ns1__Outbound_, _ns1__OutboundResponse &ns1__OutboundResponse) { return this->Outbound(NULL, NULL, ns1__Outbound_, ns1__OutboundResponse); }
        /// Web service synchronous operation 'Outbound' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Outbound(const char *soap_endpoint_url, const char *soap_action, _ns1__Outbound *ns1__Outbound_, _ns1__OutboundResponse &ns1__OutboundResponse) { return this->send_Outbound(soap_endpoint_url, soap_action, ns1__Outbound_) || this->recv_Outbound(ns1__OutboundResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Outbound' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Outbound(const char *soap_endpoint_url, const char *soap_action, _ns1__Outbound *ns1__Outbound_);
        /// Web service asynchronous operation 'recv_Outbound' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Outbound(_ns1__OutboundResponse &ns1__OutboundResponse);
        //
        /// Web service synchronous operation 'Outbound' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Outbound_(_ns1__Outbound *ns1__Outbound_, _ns1__OutboundResponse &ns1__OutboundResponse) { return this->Outbound_(NULL, NULL, ns1__Outbound_, ns1__OutboundResponse); }
        /// Web service synchronous operation 'Outbound' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Outbound_(const char *soap_endpoint_url, const char *soap_action, _ns1__Outbound *ns1__Outbound_, _ns1__OutboundResponse &ns1__OutboundResponse) { return this->send_Outbound_(soap_endpoint_url, soap_action, ns1__Outbound_) || this->recv_Outbound_(ns1__OutboundResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Outbound' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Outbound_(const char *soap_endpoint_url, const char *soap_action, _ns1__Outbound *ns1__Outbound_);
        /// Web service asynchronous operation 'recv_Outbound' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Outbound_(_ns1__OutboundResponse &ns1__OutboundResponse);
        //
        /// Web service synchronous operation 'OutboundInLaminating' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundInLaminating(_ns1__OutboundInLaminating *ns1__OutboundInLaminating_, _ns1__OutboundInLaminatingResponse &ns1__OutboundInLaminatingResponse) { return this->OutboundInLaminating(NULL, NULL, ns1__OutboundInLaminating_, ns1__OutboundInLaminatingResponse); }
        /// Web service synchronous operation 'OutboundInLaminating' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundInLaminating(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundInLaminating *ns1__OutboundInLaminating_, _ns1__OutboundInLaminatingResponse &ns1__OutboundInLaminatingResponse) { return this->send_OutboundInLaminating(soap_endpoint_url, soap_action, ns1__OutboundInLaminating_) || this->recv_OutboundInLaminating(ns1__OutboundInLaminatingResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_OutboundInLaminating' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_OutboundInLaminating(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundInLaminating *ns1__OutboundInLaminating_);
        /// Web service asynchronous operation 'recv_OutboundInLaminating' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_OutboundInLaminating(_ns1__OutboundInLaminatingResponse &ns1__OutboundInLaminatingResponse);
        //
        /// Web service synchronous operation 'OutboundInLaminating' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundInLaminating_(_ns1__OutboundInLaminating *ns1__OutboundInLaminating_, _ns1__OutboundInLaminatingResponse &ns1__OutboundInLaminatingResponse) { return this->OutboundInLaminating_(NULL, NULL, ns1__OutboundInLaminating_, ns1__OutboundInLaminatingResponse); }
        /// Web service synchronous operation 'OutboundInLaminating' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundInLaminating_(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundInLaminating *ns1__OutboundInLaminating_, _ns1__OutboundInLaminatingResponse &ns1__OutboundInLaminatingResponse) { return this->send_OutboundInLaminating_(soap_endpoint_url, soap_action, ns1__OutboundInLaminating_) || this->recv_OutboundInLaminating_(ns1__OutboundInLaminatingResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_OutboundInLaminating' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_OutboundInLaminating_(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundInLaminating *ns1__OutboundInLaminating_);
        /// Web service asynchronous operation 'recv_OutboundInLaminating' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_OutboundInLaminating_(_ns1__OutboundInLaminatingResponse &ns1__OutboundInLaminatingResponse);
        //
        /// Web service synchronous operation 'OutboundInSFCOutputQty' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundInSFCOutputQty(_ns1__OutboundInSFCOutputQty *ns1__OutboundInSFCOutputQty_, _ns1__OutboundInSFCOutputQtyResponse &ns1__OutboundInSFCOutputQtyResponse) { return this->OutboundInSFCOutputQty(NULL, NULL, ns1__OutboundInSFCOutputQty_, ns1__OutboundInSFCOutputQtyResponse); }
        /// Web service synchronous operation 'OutboundInSFCOutputQty' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundInSFCOutputQty(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundInSFCOutputQty *ns1__OutboundInSFCOutputQty_, _ns1__OutboundInSFCOutputQtyResponse &ns1__OutboundInSFCOutputQtyResponse) { return this->send_OutboundInSFCOutputQty(soap_endpoint_url, soap_action, ns1__OutboundInSFCOutputQty_) || this->recv_OutboundInSFCOutputQty(ns1__OutboundInSFCOutputQtyResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_OutboundInSFCOutputQty' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_OutboundInSFCOutputQty(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundInSFCOutputQty *ns1__OutboundInSFCOutputQty_);
        /// Web service asynchronous operation 'recv_OutboundInSFCOutputQty' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_OutboundInSFCOutputQty(_ns1__OutboundInSFCOutputQtyResponse &ns1__OutboundInSFCOutputQtyResponse);
        //
        /// Web service synchronous operation 'OutboundInSFCOutputQty' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundInSFCOutputQty_(_ns1__OutboundInSFCOutputQty *ns1__OutboundInSFCOutputQty_, _ns1__OutboundInSFCOutputQtyResponse &ns1__OutboundInSFCOutputQtyResponse) { return this->OutboundInSFCOutputQty_(NULL, NULL, ns1__OutboundInSFCOutputQty_, ns1__OutboundInSFCOutputQtyResponse); }
        /// Web service synchronous operation 'OutboundInSFCOutputQty' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundInSFCOutputQty_(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundInSFCOutputQty *ns1__OutboundInSFCOutputQty_, _ns1__OutboundInSFCOutputQtyResponse &ns1__OutboundInSFCOutputQtyResponse) { return this->send_OutboundInSFCOutputQty_(soap_endpoint_url, soap_action, ns1__OutboundInSFCOutputQty_) || this->recv_OutboundInSFCOutputQty_(ns1__OutboundInSFCOutputQtyResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_OutboundInSFCOutputQty' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_OutboundInSFCOutputQty_(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundInSFCOutputQty *ns1__OutboundInSFCOutputQty_);
        /// Web service asynchronous operation 'recv_OutboundInSFCOutputQty' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_OutboundInSFCOutputQty_(_ns1__OutboundInSFCOutputQtyResponse &ns1__OutboundInSFCOutputQtyResponse);
        //
        /// Web service synchronous operation 'OutboundMore' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundMore(_ns1__OutboundMore *ns1__OutboundMore_, _ns1__OutboundMoreResponse &ns1__OutboundMoreResponse) { return this->OutboundMore(NULL, NULL, ns1__OutboundMore_, ns1__OutboundMoreResponse); }
        /// Web service synchronous operation 'OutboundMore' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundMore(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundMore *ns1__OutboundMore_, _ns1__OutboundMoreResponse &ns1__OutboundMoreResponse) { return this->send_OutboundMore(soap_endpoint_url, soap_action, ns1__OutboundMore_) || this->recv_OutboundMore(ns1__OutboundMoreResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_OutboundMore' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_OutboundMore(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundMore *ns1__OutboundMore_);
        /// Web service asynchronous operation 'recv_OutboundMore' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_OutboundMore(_ns1__OutboundMoreResponse &ns1__OutboundMoreResponse);
        //
        /// Web service synchronous operation 'OutboundMore' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundMore_(_ns1__OutboundMore *ns1__OutboundMore_, _ns1__OutboundMoreResponse &ns1__OutboundMoreResponse) { return this->OutboundMore_(NULL, NULL, ns1__OutboundMore_, ns1__OutboundMoreResponse); }
        /// Web service synchronous operation 'OutboundMore' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int OutboundMore_(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundMore *ns1__OutboundMore_, _ns1__OutboundMoreResponse &ns1__OutboundMoreResponse) { return this->send_OutboundMore_(soap_endpoint_url, soap_action, ns1__OutboundMore_) || this->recv_OutboundMore_(ns1__OutboundMoreResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_OutboundMore' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_OutboundMore_(const char *soap_endpoint_url, const char *soap_action, _ns1__OutboundMore *ns1__OutboundMore_);
        /// Web service asynchronous operation 'recv_OutboundMore' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_OutboundMore_(_ns1__OutboundMoreResponse &ns1__OutboundMoreResponse);
        //
        /// Web service synchronous operation 'Recipe' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Recipe(_ns1__Recipe *ns1__Recipe_, _ns1__RecipeResponse &ns1__RecipeResponse) { return this->Recipe(NULL, NULL, ns1__Recipe_, ns1__RecipeResponse); }
        /// Web service synchronous operation 'Recipe' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Recipe(const char *soap_endpoint_url, const char *soap_action, _ns1__Recipe *ns1__Recipe_, _ns1__RecipeResponse &ns1__RecipeResponse) { return this->send_Recipe(soap_endpoint_url, soap_action, ns1__Recipe_) || this->recv_Recipe(ns1__RecipeResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Recipe' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Recipe(const char *soap_endpoint_url, const char *soap_action, _ns1__Recipe *ns1__Recipe_);
        /// Web service asynchronous operation 'recv_Recipe' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Recipe(_ns1__RecipeResponse &ns1__RecipeResponse);
        //
        /// Web service synchronous operation 'Recipe' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Recipe_(_ns1__Recipe *ns1__Recipe_, _ns1__RecipeResponse &ns1__RecipeResponse) { return this->Recipe_(NULL, NULL, ns1__Recipe_, ns1__RecipeResponse); }
        /// Web service synchronous operation 'Recipe' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Recipe_(const char *soap_endpoint_url, const char *soap_action, _ns1__Recipe *ns1__Recipe_, _ns1__RecipeResponse &ns1__RecipeResponse) { return this->send_Recipe_(soap_endpoint_url, soap_action, ns1__Recipe_) || this->recv_Recipe_(ns1__RecipeResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Recipe' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Recipe_(const char *soap_endpoint_url, const char *soap_action, _ns1__Recipe *ns1__Recipe_);
        /// Web service asynchronous operation 'recv_Recipe' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Recipe_(_ns1__RecipeResponse &ns1__RecipeResponse);
        //
        /// Web service synchronous operation 'GetRecipe' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecipe(_ns1__GetRecipe *ns1__GetRecipe, _ns1__GetRecipeResponse &ns1__GetRecipeResponse) { return this->GetRecipe(NULL, NULL, ns1__GetRecipe, ns1__GetRecipeResponse); }
        /// Web service synchronous operation 'GetRecipe' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecipe(const char *soap_endpoint_url, const char *soap_action, _ns1__GetRecipe *ns1__GetRecipe, _ns1__GetRecipeResponse &ns1__GetRecipeResponse) { return this->send_GetRecipe(soap_endpoint_url, soap_action, ns1__GetRecipe) || this->recv_GetRecipe(ns1__GetRecipeResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetRecipe' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetRecipe(const char *soap_endpoint_url, const char *soap_action, _ns1__GetRecipe *ns1__GetRecipe);
        /// Web service asynchronous operation 'recv_GetRecipe' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetRecipe(_ns1__GetRecipeResponse &ns1__GetRecipeResponse);
        //
        /// Web service synchronous operation 'GetRecipe' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecipe_(_ns1__GetRecipe *ns1__GetRecipe, _ns1__GetRecipeResponse &ns1__GetRecipeResponse) { return this->GetRecipe_(NULL, NULL, ns1__GetRecipe, ns1__GetRecipeResponse); }
        /// Web service synchronous operation 'GetRecipe' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecipe_(const char *soap_endpoint_url, const char *soap_action, _ns1__GetRecipe *ns1__GetRecipe, _ns1__GetRecipeResponse &ns1__GetRecipeResponse) { return this->send_GetRecipe_(soap_endpoint_url, soap_action, ns1__GetRecipe) || this->recv_GetRecipe_(ns1__GetRecipeResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetRecipe' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetRecipe_(const char *soap_endpoint_url, const char *soap_action, _ns1__GetRecipe *ns1__GetRecipe);
        /// Web service asynchronous operation 'recv_GetRecipe' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetRecipe_(_ns1__GetRecipeResponse &ns1__GetRecipeResponse);
        //
        /// Web service synchronous operation 'GetRecipeList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecipeList(_ns1__GetRecipeList *ns1__GetRecipeList, _ns1__GetRecipeListResponse &ns1__GetRecipeListResponse) { return this->GetRecipeList(NULL, NULL, ns1__GetRecipeList, ns1__GetRecipeListResponse); }
        /// Web service synchronous operation 'GetRecipeList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecipeList(const char *soap_endpoint_url, const char *soap_action, _ns1__GetRecipeList *ns1__GetRecipeList, _ns1__GetRecipeListResponse &ns1__GetRecipeListResponse) { return this->send_GetRecipeList(soap_endpoint_url, soap_action, ns1__GetRecipeList) || this->recv_GetRecipeList(ns1__GetRecipeListResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetRecipeList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetRecipeList(const char *soap_endpoint_url, const char *soap_action, _ns1__GetRecipeList *ns1__GetRecipeList);
        /// Web service asynchronous operation 'recv_GetRecipeList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetRecipeList(_ns1__GetRecipeListResponse &ns1__GetRecipeListResponse);
        //
        /// Web service synchronous operation 'GetRecipeList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecipeList_(_ns1__GetRecipeList *ns1__GetRecipeList, _ns1__GetRecipeListResponse &ns1__GetRecipeListResponse) { return this->GetRecipeList_(NULL, NULL, ns1__GetRecipeList, ns1__GetRecipeListResponse); }
        /// Web service synchronous operation 'GetRecipeList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecipeList_(const char *soap_endpoint_url, const char *soap_action, _ns1__GetRecipeList *ns1__GetRecipeList, _ns1__GetRecipeListResponse &ns1__GetRecipeListResponse) { return this->send_GetRecipeList_(soap_endpoint_url, soap_action, ns1__GetRecipeList) || this->recv_GetRecipeList_(ns1__GetRecipeListResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetRecipeList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetRecipeList_(const char *soap_endpoint_url, const char *soap_action, _ns1__GetRecipeList *ns1__GetRecipeList);
        /// Web service asynchronous operation 'recv_GetRecipeList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetRecipeList_(_ns1__GetRecipeListResponse &ns1__GetRecipeListResponse);
        //
        /// Web service synchronous operation 'RecipeVersionExamine' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int RecipeVersionExamine(_ns1__RecipeVersionExamine *ns1__RecipeVersionExamine_, _ns1__RecipeVersionExamineResponse &ns1__RecipeVersionExamineResponse) { return this->RecipeVersionExamine(NULL, NULL, ns1__RecipeVersionExamine_, ns1__RecipeVersionExamineResponse); }
        /// Web service synchronous operation 'RecipeVersionExamine' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int RecipeVersionExamine(const char *soap_endpoint_url, const char *soap_action, _ns1__RecipeVersionExamine *ns1__RecipeVersionExamine_, _ns1__RecipeVersionExamineResponse &ns1__RecipeVersionExamineResponse) { return this->send_RecipeVersionExamine(soap_endpoint_url, soap_action, ns1__RecipeVersionExamine_) || this->recv_RecipeVersionExamine(ns1__RecipeVersionExamineResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_RecipeVersionExamine' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_RecipeVersionExamine(const char *soap_endpoint_url, const char *soap_action, _ns1__RecipeVersionExamine *ns1__RecipeVersionExamine_);
        /// Web service asynchronous operation 'recv_RecipeVersionExamine' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_RecipeVersionExamine(_ns1__RecipeVersionExamineResponse &ns1__RecipeVersionExamineResponse);
        //
        /// Web service synchronous operation 'RecipeVersionExamine' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int RecipeVersionExamine_(_ns1__RecipeVersionExamine *ns1__RecipeVersionExamine_, _ns1__RecipeVersionExamineResponse &ns1__RecipeVersionExamineResponse) { return this->RecipeVersionExamine_(NULL, NULL, ns1__RecipeVersionExamine_, ns1__RecipeVersionExamineResponse); }
        /// Web service synchronous operation 'RecipeVersionExamine' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int RecipeVersionExamine_(const char *soap_endpoint_url, const char *soap_action, _ns1__RecipeVersionExamine *ns1__RecipeVersionExamine_, _ns1__RecipeVersionExamineResponse &ns1__RecipeVersionExamineResponse) { return this->send_RecipeVersionExamine_(soap_endpoint_url, soap_action, ns1__RecipeVersionExamine_) || this->recv_RecipeVersionExamine_(ns1__RecipeVersionExamineResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_RecipeVersionExamine' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_RecipeVersionExamine_(const char *soap_endpoint_url, const char *soap_action, _ns1__RecipeVersionExamine *ns1__RecipeVersionExamine_);
        /// Web service asynchronous operation 'recv_RecipeVersionExamine' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_RecipeVersionExamine_(_ns1__RecipeVersionExamineResponse &ns1__RecipeVersionExamineResponse);
        //
        /// Web service synchronous operation 'State' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int State(_ns1__State *ns1__State_, _ns1__StateResponse &ns1__StateResponse) { return this->State(NULL, NULL, ns1__State_, ns1__StateResponse); }
        /// Web service synchronous operation 'State' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int State(const char *soap_endpoint_url, const char *soap_action, _ns1__State *ns1__State_, _ns1__StateResponse &ns1__StateResponse) { return this->send_State(soap_endpoint_url, soap_action, ns1__State_) || this->recv_State(ns1__StateResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_State' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_State(const char *soap_endpoint_url, const char *soap_action, _ns1__State *ns1__State_);
        /// Web service asynchronous operation 'recv_State' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_State(_ns1__StateResponse &ns1__StateResponse);
        //
        /// Web service synchronous operation 'State' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int State_(_ns1__State *ns1__State_, _ns1__StateResponse &ns1__StateResponse) { return this->State_(NULL, NULL, ns1__State_, ns1__StateResponse); }
        /// Web service synchronous operation 'State' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int State_(const char *soap_endpoint_url, const char *soap_action, _ns1__State *ns1__State_, _ns1__StateResponse &ns1__StateResponse) { return this->send_State_(soap_endpoint_url, soap_action, ns1__State_) || this->recv_State_(ns1__StateResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_State' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_State_(const char *soap_endpoint_url, const char *soap_action, _ns1__State *ns1__State_);
        /// Web service asynchronous operation 'recv_State' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_State_(_ns1__StateResponse &ns1__StateResponse);
        //
        /// Web service synchronous operation 'ToolBind' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ToolBind(_ns1__ToolBind *ns1__ToolBind_, _ns1__ToolBindResponse &ns1__ToolBindResponse) { return this->ToolBind(NULL, NULL, ns1__ToolBind_, ns1__ToolBindResponse); }
        /// Web service synchronous operation 'ToolBind' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ToolBind(const char *soap_endpoint_url, const char *soap_action, _ns1__ToolBind *ns1__ToolBind_, _ns1__ToolBindResponse &ns1__ToolBindResponse) { return this->send_ToolBind(soap_endpoint_url, soap_action, ns1__ToolBind_) || this->recv_ToolBind(ns1__ToolBindResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ToolBind' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ToolBind(const char *soap_endpoint_url, const char *soap_action, _ns1__ToolBind *ns1__ToolBind_);
        /// Web service asynchronous operation 'recv_ToolBind' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ToolBind(_ns1__ToolBindResponse &ns1__ToolBindResponse);
        //
        /// Web service synchronous operation 'ToolBind' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ToolBind_(_ns1__ToolBind *ns1__ToolBind_, _ns1__ToolBindResponse &ns1__ToolBindResponse) { return this->ToolBind_(NULL, NULL, ns1__ToolBind_, ns1__ToolBindResponse); }
        /// Web service synchronous operation 'ToolBind' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ToolBind_(const char *soap_endpoint_url, const char *soap_action, _ns1__ToolBind *ns1__ToolBind_, _ns1__ToolBindResponse &ns1__ToolBindResponse) { return this->send_ToolBind_(soap_endpoint_url, soap_action, ns1__ToolBind_) || this->recv_ToolBind_(ns1__ToolBindResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ToolBind' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ToolBind_(const char *soap_endpoint_url, const char *soap_action, _ns1__ToolBind *ns1__ToolBind_);
        /// Web service asynchronous operation 'recv_ToolBind' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ToolBind_(_ns1__ToolBindResponse &ns1__ToolBindResponse);
        //
        /// Web service synchronous operation 'ToolLife' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ToolLife(_ns1__ToolLife *ns1__ToolLife_, _ns1__ToolLifeResponse &ns1__ToolLifeResponse) { return this->ToolLife(NULL, NULL, ns1__ToolLife_, ns1__ToolLifeResponse); }
        /// Web service synchronous operation 'ToolLife' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ToolLife(const char *soap_endpoint_url, const char *soap_action, _ns1__ToolLife *ns1__ToolLife_, _ns1__ToolLifeResponse &ns1__ToolLifeResponse) { return this->send_ToolLife(soap_endpoint_url, soap_action, ns1__ToolLife_) || this->recv_ToolLife(ns1__ToolLifeResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ToolLife' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ToolLife(const char *soap_endpoint_url, const char *soap_action, _ns1__ToolLife *ns1__ToolLife_);
        /// Web service asynchronous operation 'recv_ToolLife' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ToolLife(_ns1__ToolLifeResponse &ns1__ToolLifeResponse);
        //
        /// Web service synchronous operation 'ToolLife' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ToolLife_(_ns1__ToolLife *ns1__ToolLife_, _ns1__ToolLifeResponse &ns1__ToolLifeResponse) { return this->ToolLife_(NULL, NULL, ns1__ToolLife_, ns1__ToolLifeResponse); }
        /// Web service synchronous operation 'ToolLife' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ToolLife_(const char *soap_endpoint_url, const char *soap_action, _ns1__ToolLife *ns1__ToolLife_, _ns1__ToolLifeResponse &ns1__ToolLifeResponse) { return this->send_ToolLife_(soap_endpoint_url, soap_action, ns1__ToolLife_) || this->recv_ToolLife_(ns1__ToolLifeResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ToolLife' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ToolLife_(const char *soap_endpoint_url, const char *soap_action, _ns1__ToolLife *ns1__ToolLife_);
        /// Web service asynchronous operation 'recv_ToolLife' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ToolLife_(_ns1__ToolLifeResponse &ns1__ToolLifeResponse);
        //
        /// Web service synchronous operation 'UnBindSFC' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int UnBindSFC(_ns1__UnBindSFC *ns1__UnBindSFC, _ns1__UnBindSFCResponse &ns1__UnBindSFCResponse) { return this->UnBindSFC(NULL, NULL, ns1__UnBindSFC, ns1__UnBindSFCResponse); }
        /// Web service synchronous operation 'UnBindSFC' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int UnBindSFC(const char *soap_endpoint_url, const char *soap_action, _ns1__UnBindSFC *ns1__UnBindSFC, _ns1__UnBindSFCResponse &ns1__UnBindSFCResponse) { return this->send_UnBindSFC(soap_endpoint_url, soap_action, ns1__UnBindSFC) || this->recv_UnBindSFC(ns1__UnBindSFCResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_UnBindSFC' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_UnBindSFC(const char *soap_endpoint_url, const char *soap_action, _ns1__UnBindSFC *ns1__UnBindSFC);
        /// Web service asynchronous operation 'recv_UnBindSFC' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_UnBindSFC(_ns1__UnBindSFCResponse &ns1__UnBindSFCResponse);
        //
        /// Web service synchronous operation 'UnBindSFC' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int UnBindSFC_(_ns1__UnBindSFC *ns1__UnBindSFC, _ns1__UnBindSFCResponse &ns1__UnBindSFCResponse) { return this->UnBindSFC_(NULL, NULL, ns1__UnBindSFC, ns1__UnBindSFCResponse); }
        /// Web service synchronous operation 'UnBindSFC' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int UnBindSFC_(const char *soap_endpoint_url, const char *soap_action, _ns1__UnBindSFC *ns1__UnBindSFC, _ns1__UnBindSFCResponse &ns1__UnBindSFCResponse) { return this->send_UnBindSFC_(soap_endpoint_url, soap_action, ns1__UnBindSFC) || this->recv_UnBindSFC_(ns1__UnBindSFCResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_UnBindSFC' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_UnBindSFC_(const char *soap_endpoint_url, const char *soap_action, _ns1__UnBindSFC *ns1__UnBindSFC);
        /// Web service asynchronous operation 'recv_UnBindSFC' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_UnBindSFC_(_ns1__UnBindSFCResponse &ns1__UnBindSFCResponse);
    };
#endif
